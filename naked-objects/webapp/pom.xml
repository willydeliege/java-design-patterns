<?xml version="1.0" encoding="UTF-8"?>
<!--

    The MIT License
    Copyright © 2014-2021 Ilkka Seppälä

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <artifactId>naked-objects-webapp</artifactId>
  <build>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
        <plugin>
          <artifactId>lifecycle-mapping</artifactId>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <action>
                    <ignore/>
                  </action>
                  <pluginExecutionFilter>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <goals>
                      <goal>maven-version</goal>
                    </goals>
                    <groupId>org.codehaus.mojo</groupId>
                    <versionRange>[1.5,)</versionRange>
                  </pluginExecutionFilter>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
          <groupId>org.eclipse.m2e</groupId>
          <version>1.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-jetty-plugin</artifactId>
        <groupId>org.mortbay.jetty</groupId>
      </plugin>
      <!-- mvn package -->
      <plugin>
        <artifactId>jetty-console-maven-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <backgroundImage>${basedir}/src/main/jettyconsole/isis-banner.png</backgroundImage>
              <destinationFile>
                ${project.build.directory}/${project.build.finalName}-jetty-console.jar
              </destinationFile>
            </configuration>
            <goals>
              <goal>createconsole</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <groupId>org.simplericity.jettyconsole</groupId>
      </plugin>
      <plugin>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>maven-version</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
        <groupId>org.codehaus.mojo</groupId>
        <version>1.8</version>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>false</addClasspath>
            </manifest>
            <manifestEntries>
              <Build-Host>${agent.name}</Build-Host>
              <Build-Java>${java.version}</Build-Java>
              <Build-Label>${project.version}</Build-Label>
              <Build-Maven>Maven ${maven.version}</Build-Maven>
              <Build-OS>${os.name}</Build-OS>
              <Build-Time>${maven.build.timestamp}</Build-Time>
              <Build-User>${user.name}</Build-User>
            </manifestEntries>
          </archive>
          <packagingExcludes>WEB-INF/lib/isis-core-webserver*.jar,
            WEB-INF/lib/javax.servlet-api-*.jar,
            WEB-INF/lib/javax.websocket-api-*.jar,
            WEB-INF/lib/jetty-all-*.jar
          </packagingExcludes>
          <warName>simpleapp</warName>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <!-- other modules in this project -->
    <dependency>
      <artifactId>naked-objects-dom</artifactId>
      <exclusions>
        <exclusion>
          <!-- so don't pick up transitive dependency to asm 4.0.0 -->
          <artifactId>datanucleus-enhancer</artifactId>
          <groupId>org.datanucleus</groupId>
        </exclusion>
      </exclusions>
      <groupId>${project.groupId}</groupId>
    </dependency>
    <dependency>
      <artifactId>naked-objects-fixture</artifactId>
      <exclusions>
        <exclusion>
          <!-- so don't pick up transitive dependency to asm 4.0.0 -->
          <artifactId>datanucleus-enhancer</artifactId>
          <groupId>org.datanucleus</groupId>
        </exclusion>
      </exclusions>
      <groupId>${project.groupId}</groupId>
    </dependency>
    <!-- other isis components -->
    <dependency>
      <artifactId>isis-viewer-wicket-impl</artifactId>
      <groupId>org.apache.isis.viewer</groupId>
    </dependency>
    <dependency>
      <artifactId>isis-core-viewer-restfulobjects-server</artifactId>
      <groupId>org.apache.isis.core</groupId>
    </dependency>
    <dependency>
      <artifactId>isis-core-security-shiro</artifactId>
      <groupId>org.apache.isis.core</groupId>
    </dependency>
    <!-- isis core -->
    <dependency>
      <artifactId>isis-core-runtime</artifactId>
      <groupId>org.apache.isis.core</groupId>
    </dependency>
    <dependency>
      <artifactId>isis-core-wrapper</artifactId>
      <groupId>org.apache.isis.core</groupId>
    </dependency>
    <dependency>
      <artifactId>isis-core-security</artifactId>
      <groupId>org.apache.isis.core</groupId>
    </dependency>
    <!-- to run using WebServer (optional) -->
    <dependency>
      <artifactId>isis-core-webserver</artifactId>
      <groupId>org.apache.isis.core</groupId>
      <optional>true</optional>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <artifactId>geronimo-servlet_3.0_spec</artifactId>
      <groupId>org.apache.geronimo.specs</groupId>
    </dependency>
    <!-- JDBC drivers (for jdo objectstore) -->
    <dependency>
      <artifactId>hsqldb</artifactId>
      <groupId>org.hsqldb</groupId>
      <version>2.6.1</version>
    </dependency>
    <dependency>
      <artifactId>junit</artifactId>
      <groupId>junit</groupId>
      <scope>test</scope>
      <version>4.13.2</version>
    </dependency>
    <dependency>
      <artifactId>junit-vintage-engine</artifactId>
      <groupId>org.junit.vintage</groupId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <description>This module runs both the Wicket viewer and the Restfulobjects viewer in a single
    webapp configured to run using the datanucleus object store.
  </description>
  <modelVersion>4.0.0</modelVersion>
  <packaging>war</packaging>
  <parent>
    <artifactId>naked-objects</artifactId>
    <groupId>com.iluwatar</groupId>
    <version>1.26.0-SNAPSHOT</version>
  </parent>
  <profiles>
    <profile>
      <build>
        <plugins>
          <!-- mvn -P self-host antrun:run -->
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <configuration>
              <tasks>
                <exec executable="java" failonerror="true">
                  <arg value="-jar"/>
                  <arg
                    value="${project.build.directory}/${project.build.finalName}-jetty-console.jar"/>
                </exec>
              </tasks>
            </configuration>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
        </plugins>
      </build>
      <id>self-host</id>
    </profile>
    <profile>
      <activation>
        <property>
          <name>idea.version</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <artifactId>geronimo-servlet_3.0_spec</artifactId>
          <groupId>org.apache.geronimo.specs</groupId>
          <!-- Use 'compile' so can run o.a.i.WebServer from within IntelliJ;
						can rely on servlet container to ignore this in war file -->
          <scope>compile</scope>
        </dependency>
      </dependencies>
      <id>intellij</id>
    </profile>
    <profile>
      <build>
        <plugins>
          <!-- mvn -P jrebel antrun:run \ -Djrebel.jar="C:/Users/Dan/.IdeaIC13/config/plugins/jr-ide-idea/lib/jrebel/jrebel.jar"
						\ -Disis_jrebel_plugin.jar="C:/github/danhaywood/isis-jrebel-plugin/target/danhaywood-isis-jrebel-plugin-1.0.0-SNAPSHOT.jar" -->
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <configuration>
              <target>
                <echo message=""/>
                <echo message=""/>
                <echo message="jrebel.jar             = ${jrebel.jar}"/>
                <echo message="isis_jrebel_plugin.jar = ${isis_jrebel_plugin.jar}"/>
                <echo message="target.dir             = ${target.dir}"/>
                <echo message=""/>
                <echo message=""/>
                <exec executable="java" failonerror="true">
                  <arg value="-javaagent:${jrebel.jar}"/>
                  <arg value="-Drebel.log=false"/>
                  <arg value="-Drebel.check_class_hash=true"/>
                  <arg value="-Drebel.packages_exclude=org.apache.isis"/>
                  <!-- as used in the rebel.xml in the dom project -->
                  <arg value="-Dproject.root=${project.basedir}/.."/>
                  <arg value="-Dtarget.dir=${target.dir}"/>
                  <arg value="-Drebel.plugins=${isis_jrebel_plugin.jar}"/>
                  <arg
                    value="-Disis-jrebel-plugin.packagePrefix=${isis-jrebel-plugin.packagePrefix}"/>
                  <arg
                    value="-Disis-jrebel-plugin.loggingLevel=${isis-jrebel-plugin.loggingLevel}"/>
                  <arg value="-XX:MaxPermSize=128m"/>
                  <arg value="-classpath"/>
                  <arg value="${runtime_classpath}"/>
                  <arg value="org.apache.isis.WebServer"/>
                </exec>
                <property name="compile_classpath" refid="maven.compile.classpath"/>
                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                <property name="test_classpath" refid="maven.test.classpath"/>
                <property name="plugin_classpath" refid="maven.plugin.classpath"/>
              </target>
            </configuration>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
        </plugins>
      </build>
      <id>jrebel</id>
      <properties>
        <!-- as used in the rebel.xml in the dom project -->
        <isis-jrebel-plugin.loggingLevel>warn</isis-jrebel-plugin.loggingLevel>
        <isis-jrebel-plugin.packagePrefix>dom.simple,org.apache.isis.objectstore.jdo.applib
        </isis-jrebel-plugin.packagePrefix>
        <target.dir>target</target.dir>
      </properties>
    </profile>
  </profiles>
  <properties>
    <siteBaseDir>..</siteBaseDir>
  </properties>
</project>
